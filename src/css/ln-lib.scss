@use 'variables' as v;
@import 'props';

$levels: v.$levels;
$br-levels: v.$br-levels;
$breakpoints: v.$breakpoints;

@mixin borders {
    @include level-property(br, border-radius , $br-levels);
}

@mixin margin {
    @include level-property(m, margin , $levels);
    @include level-property(ml, margin-left , $levels);
    @include level-property(mr, margin-right , $levels);
    @include level-property(mt, margin-top, $levels);
    @include level-property(mb, margin-bottom , $levels);
    @include level-property(mx, (margin-left, margin-right) , $levels);
    @include level-property(my, (margin-top, margin-bottom) , $levels);
}

@mixin padding {
    @include level-property(p, padding , $levels);
    @include level-property(pl, padding-left , $levels);
    @include level-property(pr, padding-right , $levels);
    @include level-property(pt, padding-top, $levels);
    @include level-property(pb, padding-bottom , $levels);
    @include level-property(px, (padding-left, padding-right) , $levels);
    @include level-property(py, (padding-top, padding-bottom) , $levels);
}

@mixin display {
    &-flex {
        @include do-property(column,flex-direction,column,(display: flex));
        @include do-property(row,flex-direction,row,(display: flex));
        @include do-property(row-r,flex-direction,row-reverse,(display: flex));
        @include do-property(column-r,flex-direction,column-reverse,(display: flex));
    }

    @include do-property(grid,display,grid);

    &-auto-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    }

    @include do-property(d-none,display,none);
    @include do-property(d-block,display,block);
    @include do-property(d-inline,display,inline);
    @include do-property(d-iblock,display,inline-block);
}


@mixin alignment {

    $lev: (
        center: center,
        end: flex-end,
        start: flex-start,
        between: space-between,
        around: space-around,
        base: baseline,
        even: space-evenly
    );

    @include level-property(jc,justify-content,$lev);
    @include level-property(ai,align-items,$lev);
}

@mixin position {
    $lev: (
        rel: relative,
        abs: absolute,
        fixed: fixed,
        sticky: sticky
    );

    @include level-property(ps, position, $lev);
}

@mixin gap {
    @include level-property(gap, gap, $levels);
}

@mixin width-height {
    $lev: (
        100: 100%,
        80: 80%,
        70: 70%,
        60: 60%,
        50: 50%,
        40: 40%,
        30: 30%,
        20: 20%,
        10: 10%,
        0: 0,
        fit: fit-content
    );

    @include level-property(w, width, $lev);
    @include level-property(h, height, $lev);
}


@mixin grid {
    $lev: (
        1: repeat(1, 1fr),
        2: repeat(2, 1fr),
        3: repeat(3, 1fr),
        4: repeat(4, 1fr),
        5: repeat(5, 1fr),
        6: repeat(6, 1fr),
        7: repeat(7, 1fr),
        8: repeat(8, 1fr),
        9: repeat(9, 1fr),
        10: repeat(10, 1fr),
        11: repeat(11, 1fr),
        12: repeat(12, 1fr)
    );

    $lev2: (
        1: span 1,
        2: span 2,
        3: span 3,
        4: span 4,
        5: span 5,
        6: span 6,
        7: span 7,
        8: span 8,
        9: span 9,
        10: span 10,
        11: span 11,
        12: span 12
    );



    @include level-property(grid-col, grid-template-columns, $lev);
    @include level-property(cols, grid-column, $lev2);

}

@mixin base {
    @include borders;
    @include margin;
    @include padding;
    @include display;
    @include alignment;
    @include position;
    @include width-height;
    @include gap;
    @include grid;
}

.ln {
    @include base;
    &-custom-bg {
        --ln-custom-bg: inherit;
        background: var(--ln-custom-bg);
    }
}

:root {
    @each $bt, $val in $breakpoints {
        --ln-bp-#{$bt}: #{$val};
    } 
}

@each $bt, $val in $breakpoints {
    @media (max-width: $val) {
        .ln-#{$bt} {
            @include base;
        }

        .ln-custom-bg {
            --ln-custom-bg: var(--ln-#{$bt}-c);
        }
    }
}